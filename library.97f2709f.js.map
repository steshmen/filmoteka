{"mappings":"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","sources":["src/library.js"],"sourcesContent":["import { fetchGenre, fetchFilmById, fetchFilmsCol } from './js/fetchApi';\nimport { creatMarkup, creatCardMarkup } from './js/markup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst GENERS_LOCAL = 'genres';\nconst WATCHED_LOCAL = 'watched';\nconst QUEUE_LOCAL = 'queque';\n\nconst btnWatchedColRef = document.querySelector('.js-watched-btn');\nconst btnQueueColRef = document.querySelector('.js-queue-btn');\nconst btnRemoveWatchedRef = document.querySelector('button[data-watched]');\nconst btnRemoveQueueRef = document.querySelector('button[data-queue]');\nconst modalBtnsRef = document.querySelectorAll('.modal-btn');\nconst filmListRef = document.querySelector('.film-list');\nconst backdropRef = document.querySelector('.backdrop');\nconst closeModalBtn = document.querySelector('.modal-close__btn');\nconst modalBoxRef = document.querySelector('.modal-box');\n\n\n\n\n\n\nbtnQueueColRef.addEventListener('click', creatQueCol);\nbtnWatchedColRef.addEventListener('click', creatWatchCol);\nfilmListRef.addEventListener('click', openModal);\ncloseModalBtn.addEventListener('click', closeModal);\nbtnRemoveWatchedRef.addEventListener('click', removeFilmWatched)\nbtnRemoveQueueRef.addEventListener('click', removeFilmQueue)\n\n\nbackdropRef.addEventListener('click', (evt) => {\n    if (evt.target.className === 'backdrop') {\n        backdropRef.classList.add('is-hidden');\n    }\n});\n\ncreatWatchCol();\n\nfunction creatQueCol() {\n    btnQueueColRef.classList.add('header-lib-btn_active');\n    btnWatchedColRef.classList.remove('header-lib-btn_active');\n\n    const filmsQueue = JSON.parse(localStorage.getItem(QUEUE_LOCAL));\n    if (filmsQueue) {\n        fetchFilmsCol(filmsQueue)\n            .then(data => {\n                const markup = creatMarkup(data);\n                filmListRef.innerHTML = markup;\n            }).catch(console.log);\n    }\n}\n\nfunction creatWatchCol() {\n    btnQueueColRef.classList.remove('header-lib-btn_active');\n    btnWatchedColRef.classList.add('header-lib-btn_active');\n    const filmsWatched = JSON.parse(localStorage.getItem(WATCHED_LOCAL));\n    if (filmsWatched) {\n        fetchFilmsCol(filmsWatched)\n            .then(data => {\n                const markup = creatMarkup(data);\n                filmListRef.innerHTML =  markup;\n            }).catch(console.log);\n    }\n}\nfunction openModal(evt) {\n    window.addEventListener('keydown', closeModalEsc)\n\n    const filmId = Number(evt.target.dataset.id);\n\n    if (!filmId) {\n        return;\n    }\n    backdropRef.classList.remove('is-hidden')\n\n    modalBtnsRef.forEach((item) => {\n        item.setAttribute('data-id', filmId)\n    });\n\n    fetchFilmById(filmId).then(data => {\n        const markup = creatCardMarkup(data);\n        modalBoxRef.innerHTML = markup;\n    }).catch(console.log)\n} \n\nfunction closeModalEsc(evt) {\n    if (evt.code === \"Escape\") {\n        closeModal();\n    }\n}\n\nfunction closeModal() {\n    backdropRef.classList.add('is-hidden');\n    modalBtnsRef.forEach((item) => {\n        item.removeAttribute('data-id');\n    });\n    window.removeEventListener('keydown', closeModalEsc);\n}\n\nfunction removeFilmWatched(evt) {\n    const id = Number(evt.target.dataset.id);\n    const arrW = JSON.parse(localStorage.getItem(WATCHED_LOCAL));\n\n    if (arrW) {\n        if (arrW.includes(id)) {\n            const idxOf = arrW.indexOf(id);\n            arrW.splice(idxOf, 1);\n            localStorage.setItem(WATCHED_LOCAL, JSON.stringify(arrW));\n            creatWatchCol();\n            Notify.success('Movie removed from Watched');\n            closeModal();\n            return;\n        }\n    }\n    Notify.warning('The movie is not in the Watched');\n}\n\nfunction removeFilmQueue(evt) {\n    const id = Number(evt.target.dataset.id);\n    const arrQ = JSON.parse(localStorage.getItem(QUEUE_LOCAL));\n\n    if (arrQ) {\n        if (arrQ.includes(id)) {\n            const idxOf = arrQ.indexOf(id);\n            arrQ.splice(idxOf, 1);\n            localStorage.setItem(QUEUE_LOCAL, JSON.stringify(arrQ));\n            Notify.success('Movie removed from Queue');\n            creatQueCol();\n            closeModal();\n            return;\n        }\n    }\n    Notify.warning('The movie is not in the Queue');\n\n}\n"],"names":["$9TCtp","parcelRequire","$ce3726a01b8ab25a$var$btnWatchedColRef","document","querySelector","$ce3726a01b8ab25a$var$btnQueueColRef","$ce3726a01b8ab25a$var$btnRemoveWatchedRef","$ce3726a01b8ab25a$var$btnRemoveQueueRef","$ce3726a01b8ab25a$var$modalBtnsRef","querySelectorAll","$ce3726a01b8ab25a$var$filmListRef","$ce3726a01b8ab25a$var$backdropRef","$ce3726a01b8ab25a$var$closeModalBtn","$ce3726a01b8ab25a$var$modalBoxRef","$ce3726a01b8ab25a$var$creatQueCol","classList","add","remove","filmsQueue","JSON","parse","localStorage","getItem","fetchFilmsCol","then","data","markup","$3huUq","creatMarkup","innerHTML","catch","console","log","$ce3726a01b8ab25a$var$creatWatchCol","filmsWatched","$ce3726a01b8ab25a$var$closeModalEsc","evt","code","$ce3726a01b8ab25a$var$closeModal","forEach","item","removeAttribute","window","removeEventListener","addEventListener","filmId","Number","target","dataset","id","setAttribute","fetchFilmById","creatCardMarkup","arrW","includes","idxOf","indexOf","splice","setItem","stringify","$iQIUW","Notify","success","warning","arrQ","className"],"version":3,"file":"library.97f2709f.js.map"}