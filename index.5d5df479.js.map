{"mappings":"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","sources":["src/js/fetchApi.js","src/js/markup.js","src/index.js"],"sourcesContent":["export { fetchApi, fetchGenre, fetchFilmById, fetchSearch, fetchFilmsCol };\nconst API_KEY = '0d7d20afff25839c3a8a445daa632bca';\nconst LONG_API_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwZDdkMjBhZmZmMjU4MzljM2E4YTQ0NWRhYTYzMmJjYSIsInN1YiI6IjY0MDZmYTQ1Zjg1OTU4MDA3ODkzM2NhMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hxCRl1fW15ZCia2rCdoBS8QgTli027q61PhCYYu5rzg';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n\nasync function fetchApi(page = 1) {\n    const resp = await fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`);\n    const data = await resp.json();\n    return data;\n}\n\nasync function fetchFilmById(id) {\n    const resp = await fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\n    const data = await resp.json();\n    return data;\n}\n\nasync function fetchSearch(name, page = 1) {\n    const resp = await fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${name}&language=en-US`);\n    const data = await resp.json();\n    return data;\n} \n\nasync function fetchGenre() {\n    const resp = await fetch(`${BASE_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`);\n    const data = await resp.json();\n    return data;\n}\nasync function fetchFilmsCol(arr) {\n    const resps = await arr.map(async el => {\n        const resp = await fetch(`${BASE_URL}movie/${el}?api_key=${API_KEY}&language=en-US`);\n        return resp.json()\n    })\n    const data = await Promise.all(resps);\n    return data\n}\n\n","export { creatMarkup, creatCardMarkup };\n\nfunction creatMarkup(items) {\n    const elements = items.filter(el => el.backdrop_path);\n    \n    const markup = elements.map(({ title, release_date, poster_path, id }) => {\n        return `\n        <li class=\"film-list__item\">\n          <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" class=\"film-list__img\" data-id=\"${id}\">\n          <h2 class=\"film-list__title\">${title}</h2>\n          <p class=\"film-list__text\">${release_date}</p>\n        </li>\n        `}).join('');\n    return markup;\n}\n\nfunction creatCardMarkup({ overview, popularity, poster_path, original_title, vote_average, vote_count, release_date}) {\n    const markup = `\n        <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" class=\"modal-img\" alt=\"${original_title}\" loading=\"lazy\">\n        <div class=\"modal-content-box\">\n            <h2 class=\"modal-title\">${original_title}</h2>\n\n            <ul class=\"modal-list\">\n                <li class=\"modal-list__item\">\n                    <p class=\"modal-list__text\">Vote / Votes</p>\n                    <span class=\"modal-list__vote\">${vote_average}</span>\n                    <span class=\"modal-list__value\">${vote_count}</span>\n                </li>\n\n                <li class=\"modal-list__item\">\n                    <p class=\"modal-list__text\">Popularity</p>\n                    <span class=\"modal-list__value\">${popularity}</span>\n                </li>\n\n                <li class=\"modal-list__item\">\n                    <p class=\"modal-list__text\">Original Title</p>\n                    <span class=\"modal-list__value\">${original_title}</span>\n                </li>\n\n                <li class=\"modal-list__item\">\n                    <p class=\"modal-list__text\">Release date</p>\n                    <span class=\"modal-list__value\">${release_date}</span>\n                </li>\n            </ul>\n            <h3 class=\"modal-sub-title\">About</h3>\n            <p class=\"modal-text\">${overview}</p>\n        </div>\n    `;\n    return markup;\n}","import { fetchApi, fetchGenre, fetchFilmById, fetchSearch, fetchFilmsCol } from './js/fetchApi';\nimport { creatMarkup, creatCardMarkup } from './js/markup';\n\nconst GENERS_LOCAL = 'genres';\nconst WATCHED_LOCAL = 'watched';\nconst QUEUE_LOCAL = 'queque';\n\n\nconst filmListRef = document.querySelector('.film-list');\nconst backdropRef = document.querySelector('.backdrop');\nconst closeModalBtn = document.querySelector('.modal-close__btn');\nconst modalBoxRef = document.querySelector('.modal-box');\nconst searchFormRef = document.querySelector('.header-form');\nconst searchFormText = document.querySelector('.header-form__text');\nconst modalBtnsRef = document.querySelectorAll('.modal-btn');\nconst modalBtnWatchedRef = document.querySelector('button[data-watched]');\nconst modalBtnQueueRef = document.querySelector('button[data-queue]');\n\nsearchFormText.style.visibility = 'hidden';\n\nsearchFormRef.addEventListener('submit', onSearch);\nfilmListRef.addEventListener('click', openModal);\ncloseModalBtn.addEventListener('click', closeModal);\nmodalBtnQueueRef.addEventListener('click', addQueue);\nmodalBtnWatchedRef.addEventListener('click', addWatched);\n\nbackdropRef.addEventListener('click', (evt) => {\n    if (evt.target.className === 'backdrop') {\n        backdropRef.classList.add('is-hidden');\n    }\n});\n\nfetchGenre()\n    .then(data => {\n        const genres = JSON.stringify(data.genres);\n        localStorage.setItem(GENERS_LOCAL, genres);\n    }).catch(err => console.log(err));\n\nfetchApi().then(data => {\n    const items = data.results;\n    const markup = creatMarkup(items);\n    filmListRef.insertAdjacentHTML('beforeend', markup);\n    \n}).catch(err => console.log(err))\n\nfunction addQueue(evt) {\n    const id = Number(evt.target.dataset.id);\n    const arr = JSON.parse(localStorage.getItem(QUEUE_LOCAL));\n    \n    if(!arr) {\n        const arr2 = [];\n        arr2.push(id);\n        localStorage.setItem(QUEUE_LOCAL, JSON.stringify(arr2));\n        closeModal();\n        return\n    }\n    if (!arr.includes(id)) {\n        arr.push(id);\n        localStorage.setItem(QUEUE_LOCAL, JSON.stringify(arr));\n        closeModal();\n        return;\n    }\n    closeModal();\n}\n\nfunction addWatched(evt) {\n    const id = Number(evt.target.dataset.id);\n    const arr = JSON.parse(localStorage.getItem(WATCHED_LOCAL));\n    \n    if(!arr) {\n        const arr2 = [];\n        arr2.push(id);\n        localStorage.setItem(WATCHED_LOCAL, JSON.stringify(arr2));\n        closeModal();\n        return\n    }\n    if (!arr.includes(id)) {\n        arr.push(id);\n        localStorage.setItem(WATCHED_LOCAL, JSON.stringify(arr));\n        closeModal();\n        return;\n    }\n    closeModal();\n}\n\nfunction openModal(evt) {\n    window.addEventListener('keydown', closeModalEsc)\n    const filmId = Number(evt.target.dataset.id);\n\n    if (!filmId) {\n        return;\n    }\n    backdropRef.classList.remove('is-hidden')\n\n    modalBtnsRef.forEach((item) => {\n        item.setAttribute('data-id', filmId)\n    });\n\n    fetchFilmById(filmId).then(data => {\n        const markup = creatCardMarkup(data);\n        modalBoxRef.innerHTML = markup;\n    })\n\n} \n\nfunction closeModal() {\n    backdropRef.classList.add('is-hidden');\n    modalBtnsRef.forEach((item) => {\n        item.removeAttribute('data-id');\n    });\n    window.removeEventListener('keydown', closeModalEsc);\n}\n\nfunction closeModalEsc(evt) {\n    console.log(evt.code);\n    if (evt.code === \"Escape\") {\n        closeModal();\n    }\n}\n\nfunction onSearch(evt) {\n    evt.preventDefault();\n    searchFormText.style.visibility = 'hidden';\n    const serchFilm = evt.currentTarget.elements.searchFilm.value;\n    \n    \n    fetchSearch(serchFilm).then(data => {\n        const items = data.results;\n        if (!items[0]) {\n            searchFormText.style.visibility = 'visible';\n            return\n        }\n\n        filmListRef.innerHTML = '';\n        const markup = creatMarkup(items);\n        filmListRef.insertAdjacentHTML('beforeend', markup);\n    }).catch(console.log);\n}\n\n"],"names":["async","$7347181ddf74d6b0$export$25998e5c2601cffd","id","resp","fetch","json","$7347181ddf74d6b0$export$6f539dc45dead1c","name","page","$263aef85a4d00bfb$export$d15b2e48a080e0fe","items","filter","el","backdrop_path","map","title","release_date","poster_path","join","$263aef85a4d00bfb$export$c2172e452593faf6","overview","popularity","original_title","vote_average","vote_count","$1f0dc3b9307be026$var$filmListRef","document","querySelector","$1f0dc3b9307be026$var$backdropRef","$1f0dc3b9307be026$var$closeModalBtn","$1f0dc3b9307be026$var$modalBoxRef","$1f0dc3b9307be026$var$searchFormRef","$1f0dc3b9307be026$var$searchFormText","$1f0dc3b9307be026$var$modalBtnsRef","querySelectorAll","$1f0dc3b9307be026$var$modalBtnWatchedRef","$1f0dc3b9307be026$var$modalBtnQueueRef","$1f0dc3b9307be026$var$closeModal","classList","add","forEach","item","removeAttribute","window","removeEventListener","$1f0dc3b9307be026$var$closeModalEsc","evt","console","log","code","style","visibility","addEventListener","preventDefault","currentTarget","elements","searchFilm","value","then","data","results","innerHTML","markup","insertAdjacentHTML","catch","filmId","Number","target","dataset","remove","setAttribute","arr","JSON","parse","localStorage","getItem","arr2","push","setItem","stringify","includes","className","genres","err"],"version":3,"file":"index.5d5df479.js.map"}